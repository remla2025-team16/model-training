# A name for the workflow, which will be displayed in the Actions tab of your GitHub repository.
name: Lint, Test, and Update Metrics

# This specifies the events that will trigger the workflow.
on: [push, pull_request]

# Defines the permissions granted to the GITHUB_TOKEN for this workflow.
permissions:
  contents: write
  pull-requests: write

jobs:
  # The 'lint' job is responsible for checking the code quality and style.
  lint:
    name: "Code Linting"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Cache Pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Installs dependencies needed for linting, including project-specific ones.
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # Runs pylint, which will use a .pylintrc file if it exists in the repo root.
    - name: Run pylint
      run: |
        pylint sentiment_model_trainer/ tests/

    - name: Run flake8
      run: |
        flake8 sentiment_model_trainer/ tests/ --max-line-length=100 --ignore=E203,W503 --exclude=.git,__pycache__,build,dist

  # The 'testing' job now runs only for Python 3.12.
  testing:
    name: "Run Tests & Generate Coverage"
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Cache Pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-3.12-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-3.12-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov coverage-badge

    - name: Prepare directories
      run: |
        mkdir -p models
        mkdir -p metrics

    - name: Download Model from Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh release download --clobber --pattern 'sentiment-model.pkl' -R ${{ github.repository }}

    - name: Run tests with coverage
      run: |
        pytest --cov=sentiment_model_trainer --cov-report=term-missing | tee metrics/test_report.txt

    - name: Create coverage badge
      run: |
        coverage-badge -o metrics/coverage.svg

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-metrics
        path: |
          metrics/test_report.txt
          metrics/coverage.svg

    - name: Commit metrics
      if: github.ref == 'refs/heads/main'
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git pull --rebase
        git add metrics/
        # The '|| exit 0' part prevents the step from failing if there are no changes to commit.
        git commit -m "Update test metrics and coverage badge" || exit 0
        git push
