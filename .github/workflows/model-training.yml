name: Model Training, Release
on:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    paths:
      - 'data/**'
      - 'sentiment_model_trainer/**'
      - 'VERSION'
      

permissions:
  contents: write

jobs:

  build_and_release:
    name: Build and Release Model
    runs-on: ubuntu-latest
    outputs:
      is_stable_release: ${{ steps.determine_version.outputs.is_stable_release }}
      new_version: ${{ steps.determine_version.outputs.new_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache Pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.12-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.12-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Train Model with DVC
        run: |
          dvc repro

      - name: Check for model file
        run: |
          if [ ! -f "models/sentiment-model.pkl" ]; then
            echo "Model file 'models/sentiment-model.pkl' not found after 'dvc repro'."
            exit 1
          fi
          echo "Model file found."

      - name: Determine Version
        id: determine_version
        run: |
          CURRENT_VERSION=$(cat VERSION)
          echo "Current version from file: $CURRENT_VERSION"

          #If it's a stable release.
          if [[ "${{ github.ref_type }}" == "tag" ]]; then

            if [[ "${{ github.ref_name }}" != "$CURRENT_VERSION" ]]; then
              echo "Error: Git tag '${{ github.ref_name }}' does not match VERSION file content '$CURRENT_VERSION'."
              exit 1
            fi
            
            echo "is_stable_release=true" >> $GITHUB_OUTPUT
            echo "release_version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
            echo "is_prerelease=false" >> $GITHUB_OUTPUT

            VERSION_NO_V=${CURRENT_VERSION#v}
            MAJOR=$(echo "$VERSION_NO_V" | cut -d . -f 1)
            MINOR=$(echo "$VERSION_NO_V" | cut -d . -f 2)
            PATCH=$(echo "$VERSION_NO_V" | cut -d . -f 3)
            NEW_PATCH=$((PATCH + 1))
            echo "new_version=v$MAJOR.$MINOR.$NEW_PATCH-pre" >> $GITHUB_OUTPUT

          else
            echo "is_stable_release=false" >> $GITHUB_OUTPUT

            SHORT_SHA=$(git rev-parse --short HEAD)
            echo "release_version=${CURRENT_VERSION}-${SHORT_SHA}" >> $GITHUB_OUTPUT
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
              models/sentiment-model.pkl
          tag_name: ${{ steps.determine_version.outputs.release_version }}
          prerelease: ${{ steps.determine_version.outputs.is_prerelease }}
          generate_release_notes: true
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  bump_version_on_main:
    name: Bump Version on Main Branch
    runs-on: ubuntu-latest
    needs: build_and_release
    if: needs.build_and_release.outputs.is_stable_release == 'true'
    
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: 'main'

      - name: Update VERSION file
        run: |
          echo "Bumping version to ${{ needs.build_and_release.outputs.new_version }}"
          echo "${{ needs.build_and_release.outputs.new_version }}" > VERSION

      - name: Commit and push version bump
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add VERSION
          # The [skip ci] tag prevents this commit from re-triggering the workflow.
          git commit -m "ci: Bump version to ${{ needs.build_and_release.outputs.new_version }} [skip ci]"
          git push
